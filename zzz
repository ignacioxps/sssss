
$(document).ready(function () {
  var ekle = $("#canvas");
  var intervalos = {};
  var posicionesAnteriores = {};

var yaEjecutado = false;

function entrarJuego(indice) {
  if (yaEjecutado) {
    return;
  }

  var mySelect = document.getElementById('gamemode');
  if (indice < mySelect.options.length) {
    mySelect.options[indice].selected = true;
    mySelect.onchange();
  }
  yaEjecutado = true;
  setTimeout(() => {
    $("#playBtn").trigger("click");
    desactivarBotones();
    setTimeout(() => {
      yaEjecutado = false;
      activarBotones();
    }, 900);
  }, 700);
}

function desactivarBotones() {
  for (let i = 1; i <= 13; i++) {
    $("#botonobservar" + i).prop("disabled", true);
  }
}

function activarBotones() {
  for (let i = 1; i <= 13; i++) {
    $("#botonobservar" + i).prop("disabled", false);
  }
}


  function crearBoton(id, texto, bottom, left, salaIndice, tiempoIndice) {
    var boton = document.createElement("button");
    boton.setAttribute("id", id);
    ekle.after(boton);

$("#" + id).css({
    "position": "absolute",
    "font-size": "14px",
    "bottom": bottom,
    "left": left,
    "color": "white",
    "border-color": "#0000",
    "background": "#0000",
    "animation": "move linear 2000ms infinite",
    "color": "#ffffff",
    "font": "normal 14px Varela Round, sans-serif",
    "letter-spacing": "1px",
    "text-transform": "uppercase",
    "outline": "none"
});

var style = document.createElement('style');
style.innerHTML = `
 @keyframes move {
        0% {
            text-shadow:
                2.5px 0 0 #da0641,
                -2.5px 0 0 #13f1fc
        }
        25% {
            text-shadow:
                -2.5px 0 0 #13f1fc,
                2.5px 0 0 #da0641
        }
        50% {
            text-shadow:
                2.5px 0 0 #da0641,
                -2.5px 0 0 #13f1fc
        }
        75% {
            text-shadow:
                -2.5px 0 0 #13f1fc,
                2.5px 0 0 #da0641
        }
        100% {
            text-shadow:
                2.5px 0 0 #da0641,
                -2.5px 0 0 #13f1fc
        }
    }
`;

document.head.appendChild(style);

    $("#" + id).on("click", function () {
      entrarJuego(salaIndice);
    });

   setTimeout(() => {
        iniciarIntervalo(id, tiempoIndice);
    }, 100);
  }

function obtenerTextoSegunIndice(indice, tiempo) {
  if (indice >= 0 && indice <= 77) {
    return "FFA-" + tiempo;
  } else if (indice === 78) {
    return "CFFA-1";
  } else if (indice === 79) {
    return "CFFA-2";
  } else if (indice === 80) {
    return "VS-CFFA";
  } else if (indice === 81) {
    return "VS-FFA";
  } else if (indice === 82) {
    return "VS-GSZ";
  } else if (indice === 83) {
    return "EKIP-1";
  } else if (indice === 84) {
    return "GSZ-1";
  } else {
    return "OtroTexto";
  }
}

function iniciarIntervalo(id, tiempoIndice) {
  var salaIndice = tiempoIndice;
  intervalos[id] = setInterval(() => {
    $("#" + id).load("/tr/halloffame tr:nth-child(" + (tiempoIndice + 1) + ") td:last-child", function () {
      var buttonText = $(this).text().trim();

      if (buttonText !== "") {
        var nuevoTexto = obtenerTextoSegunIndice(salaIndice, tiempoIndice);
        $("#" + id).text(nuevoTexto + " [" + buttonText + "]");
      }
    });
  }, 1500);
}

  function limpiarIntervalos() {

    for (var key in intervalos) {
      clearInterval(intervalos[key]);
    }
    intervalos = {};
  }

  function limpiarBotones() {
    for (var i = 1; i <= 13; i++) {
      $("#botonobservar" + i).remove();
    }
  }

function crearBotones(posiciones) {
  for (var j = 1; j <= 13; j++) {
    if (posiciones['tiempo' + j] && posiciones['tiempo' + j].indice !== null) {
      var posicion = posiciones['tiempo' + j].indice;
      var textoBoton = obtenerTextoBoton(posicion, posiciones['tiempo' + j].tiempo);
      crearBoton("botonobservar" + j, textoBoton, (600 - (j - 1) * 20) + "px", "0.5%", posicion - 1, posicion);
    }
  }
}

function obtenerTextoBoton(posicion, tiempo) {
  if (posicion >= 0 && posicion <= 77) {
    return "FFA-" + tiempo;
  } else if (posicion === 78) {
    return "CFFA-1";
  } else if (posicion === 79) {
    return "CFFA-2";
  } else if (posicion === 80) {
    return "VS-CFFA";
  } else if (posicion === 81) {
    return "VS-FFA";
  } else if (posicion === 82) {
    return "VS-GSZ";
  } else if (posicion === 83) {
    return "EKIP-1";
  } else if (posicion === 84) {
    return "GSZ-1";
  } else {
    return "OtroTexto";
  }
}
  async function obtenerActualizarTiempos() {
    limpiarIntervalos();
    limpiarBotones();

    var url = 'https://agarz.com/tr/halloffame';
    var posiciones = {
  tiempo1: { indice: null, tiempo: null },
  tiempo2: { indice: null, tiempo: null },
  tiempo3: { indice: null, tiempo: null },
  tiempo4: { indice: null, tiempo: null },
  tiempo5: { indice: null, tiempo: null },
  tiempo6: { indice: null, tiempo: null },
  tiempo7: { indice: null, tiempo: null },
  tiempo8: { indice: null, tiempo: null },
  tiempo9: { indice: null, tiempo: null },
  tiempo10: { indice: null, tiempo: null },
  tiempo11: { indice: null, tiempo: null },
  tiempo12: { indice: null, tiempo: null },
  tiempo13: { indice: null, tiempo: null }

};

    try {
      var response = await fetch(url);

      if (!response.ok) {
        throw new Error('Error al obtener la página');
      }

      var data = await response.text();
      var parser = new DOMParser();
      var doc = parser.parseFromString(data, 'text/html');
      var filas = doc.querySelectorAll('.tr_oda');

      for (var i = 0; i < filas.length; i++) {
        var min = parseInt(filas[i].querySelector('span[id^="min_"]').innerText);
        var sec = parseInt(filas[i].querySelector('span[id^="sec_"]').innerText);

        if (sec < 50) {
          min--;
          sec += 60;
        }

        var tiempoTotal = min + sec / 60;

        for (var j = 1; j <= 13; j++) {
          if (posiciones['tiempo' + j].tiempo === null && tiempoTotal >= 2 && tiempoTotal <= 13) {
            posiciones['tiempo' + j] = { indice: i + 1, tiempo: tiempoTotal };
            console.log('FFA de la posición ' + j + ':', posiciones['tiempo' + j]);
            break;
          }
        }
      }
      posicionesAnteriores = { ...posiciones };
    } catch (error) {
      console.error('Error al obtener la página:', error);
    } finally {
      crearBotones(posiciones);

      setTimeout(obtenerActualizarTiempos, 25000);
    }
  }
  obtenerActualizarTiempos();
});


